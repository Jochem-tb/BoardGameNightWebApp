name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: SSWFR-JJL-WebApp  # Name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH_UI: "./publish/UI"  # Path where your Web App will be published
  AZURE_WEBAPP_PACKAGE_PATH_API: "./publish/API" # Path where your API will be published
  AZURE_ENTITY_SQL_CONNECTION_STRING: "Server=${{ secrets.AZURE_SQL_SERVER_NAME }};Database=${{ secrets.AZURE_ENTITY_SQL_DATABASE_NAME }};User Id=${{ secrets.AZURE_SQL_USER }};Password=${{ secrets.AZURE_SQL_PASSWORD }};Encrypt=True;TrustServerCertificate=False;"
  AZURE_IDENTITY_SQL_CONNECTION_STRING: "Server=${{ secrets.AZURE_SQL_SERVER_NAME }};Database=${{ secrets.AZURE_IDENTITY_SQL_DATABASE_NAME }};User Id=${{ secrets.AZURE_SQL_USER }};Password=${{ secrets.AZURE_SQL_PASSWORD }};Encrypt=True;TrustServerCertificate=False;"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Entity Framework CLI
        run: dotnet tool install --global dotnet-ef

      - name: Add .NET Tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore Dependencies
        run: dotnet restore ./BoardGameNight.sln

      - name: Build Solution
        run: dotnet build ./BoardGameNight.sln --configuration Release --no-restore

      - name: Apply Entity Framework Migrations for BoardGameNight
        run: dotnet ef database update --connection "${{ env.AZURE_ENTITY_SQL_CONNECTION_STRING }}" --project ./BGN.Infrastructure/BGN.Infrastructure.csproj --context RepositoryDbContext

      - name: Apply Identity Framework Migrations for BoardGameNight_Auth
        run: dotnet ef database update --connection "${{ env.AZURE_IDENTITY_SQL_CONNECTION_STRING }}" --project ./BGN.Infrastructure/BGN.Infrastructure.csproj --context AuthDbContext


        # Publish Web App
      - name: Publish Web App (BGN.UI)
        run: dotnet publish ./BGN.UI/BGN.UI.csproj --configuration Release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH_UI }} --no-restore

      # Publish API
      - name: Publish API (BGN.WebService)
        run: dotnet publish ./BGN.WebService/BGN.WebService.csproj --configuration Release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH_API }} --no-restore

      # Deploy Web App
      - name: Deploy Web App to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_UI }}
          slot-name: '/'

      # Deploy API to Azure
      - name: Deploy API to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_API }}
          slot-name: 'api' # Optional: specify a subdirectory or slot name
        
      # - name: Publish
      #   run: dotnet publish ./BoardGameNight.sln --configuration Release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} --no-restore

      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
      #     package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
