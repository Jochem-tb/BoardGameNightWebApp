@using BGN.Shared
@model BGN.UI.Models.GameNightDetailsModel

<div class="container mt-5">

    <div>
        <h1 class="fw-bold pb-4">
            Testing how many characters i can put here untill it becomes bothersome to read huh,
            i dont know what the limit is but i think at this point it is already too long
            for anywone to actually read through
        </h1>
        <div>
            @if (@Model.CurrentUser != null)
            {
                if (@Model.CurrentUser.Id == @Model.GameNight.OrganiserId)
                {
                    <a asp-controller="GameNight" asp-action="Edit" asp-route-gameNightId="@Model.GameNight.Id" class="btn btn-primary">Edit</a>
                }

                if (@Model.GameNight.Attendees.Any(a => a.Id == @Model.CurrentUser.Id))
                {
                    <a asp-controller="GameNight" asp-action="Leave" asp-route-gameNightId="@Model.GameNight.Id" class="btn btn-danger">Leave</a>
                }
                else
                {
                    <a asp-controller="GameNight" asp-action="Join" asp-route-gameNightId="@Model.GameNight.Id" class="btn btn-success">Join</a>
                }
            }
        </div>
    </div>


    <div class="row">
        <div class="col-12 col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">

                    <h1 class="fw-bold pb-4">Testing how many character s</h1>
                    <div class="row">
                        <div class="col-6">
                            <p><strong>Name:</strong> @Model.GameNight.Name</p>
                            <p><strong>Max Players:</strong> @Model.GameNight.MaxPlayers</p>
                            <p><strong>Organiser:</strong> @Model.GameNight.OrganiserFirstname</p>
                        </div>
                        <div class="col-6">
                            <h5 class="text-decoration-underline"><strong>Location:</strong></h5>

                            <p><strong>House:</strong> @Model.GameNight.Street @Model.GameNight.HouseNr</p>
                            <p><strong>City:</strong> @Model.GameNight.City</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12 col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div>
                        <h5 class="fw-bold d-inline">@Model.GameNight.Attendees.Count() Attendees</h5>
                        <h6 class="d-inline ms-2 fst-italic">
                            @(Model.GameNight.MaxPlayers - @Model.GameNight.Attendees.Count())
                            Places left
                        </h6>
                    </div>

                    <ul class="list-group">
                        @foreach (var person in Model.GameNight.Attendees)
                        {
                            <li class="list-group-item">
                                <!-- nice icon-->
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                                    <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                                    <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
                                </svg>
                                @person.FirstName
                                @person.LastName
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        @{
            var gameNightFoodOptions = Model.GameNight.FoodOptions;
            var preferences = Model.CurrentUser.Preferences;
            var checkIfNotComplete = new List<int>();
            foreach (var pref in preferences)
            {
                checkIfNotComplete.Add(pref.Id);
            }
        }

        <div class="col-12 col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="fw-bold">Food Options</h5>
                    <ul class="list-group">

                        <!--If preferences is empty, we dont have to do the whole logic, just display-->
                        @if (preferences != null)
                        {
                            //Display the foodoptions from GameNight, if it is also our pref its background is green else normal
                            @foreach (var option in gameNightFoodOptions)
                            {

                                if (checkIfNotComplete.Contains(option.Id))
                                    {
                                    checkIfNotComplete.Remove(option.Id);
                                        <li class="list-group-item bg-success bg-opacity-50">@option.Name</li>
                                    }
                                    else
                                    {
                                        <li class="list-group-item">@option.Name</li>
                                    }
                                
                            }

                            // Display any remaining preferences that were not matched, and are not present in this gamenight
                            if (checkIfNotComplete.Count > 0)
                            {
                                foreach (var missingOptionId in checkIfNotComplete)
                                {
                                    // Find the missing option name using the ID
                                    var missingOption = preferences.FirstOrDefault(opt => opt.Id == missingOptionId);
                                    if (missingOption != null)
                                    {
                                        <li class="list-group-item bg-danger bg-opacity-75">@missingOption.Name</li>
                                    }
                                }
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-12">
            <div class="card shadow-sm mt-3">
                <div class="card-body">
                    <h5 class="fw-bold">Games</h5>
                    <hr />

                    @{

                        var isUserAdult = true; //TODO: replace with actual user check
                    }

                    <div class="row">
                        @foreach (var game in Model.GameNight.Games)
                        {
                            var gameCardClass = game.IsAdult && !isUserAdult ? "bg-danger bg-opacity-50" : "bg-white";
                            <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-3 mt-1">

                                <div class="card h-100 border-1 border-secondary @gameCardClass">


                                    <img src=@game.ImgUrl class="card-img-top img-fluid" alt="Photo of Boardgame">


                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title fw-semibold">
                                            @game.Name
                                            @if (game.IsAdult)
                                            {
                                                <span class="badge bg-danger ms-auto small float-end">18+</span>
                                            }
                                        </h5>


                                        <p class="card-text">
                                            @game.Description <br />
                                            Playable with: @game.MinPlayers/@game.MaxPlayers
                                        </p>


                                        <!--Dont display the details button if user is Not 18+ and game is-->
                                        @if (!game.IsAdult || (isUserAdult && game.IsAdult))
                                        {
                                            <!-- Details button on the bottem, alsways bot-->
                                            <a asp-controller="Game" asp-action="GameDetails" asp-route-gameId="@game.Id" class="btn btn-primary btn-sm mt-auto ">Details</a>
                                        }
                                    </div>
                                </div>
                            </div>


                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


