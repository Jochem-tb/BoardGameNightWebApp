@{
    ViewData["Title"] = "Add Games";
    ViewData["isEditMode"] = @Model.isEditMode;
    if (Model.GameNight != null)
    {
        ViewData["ModelGameNightId"] = Model.GameNight.Id;
    }
    Layout = "~/Views/Shared/_CrudLayout.cshtml";
}
@model BGN.UI.Models.CrudGameNightModel

<!-- Row for sidebar and game list -->
<div class="row">
    <!-- Sidebar for filters -->
    <div class="col-12 col-md-3 mb-4">
        <div class="bg-light p-3 rounded">
            <h5 class="fw-bold mb-3">Filters</h5>

            <form method="get" asp-controller="GameNight" asp-action="Filter">

                <!-- Example filter: Search by name -->
                <div class="mb-3">
                    <label class="form-label">Search by Name</label>
                    <input asp-for="GameListModel.SearchName" type="text" class="form-control" id="searchName" placeholder="Enter game name">
                </div>

                <!-- Example filter: Age restriction -->
                <div class="mb-3">
                    <label class="form-label">Age Restriction</label>
                    <div class="form-check">
                        <input asp-for="GameListModel.SearchIsAdult" class="form-check-input" type="radio" value="" id="ageFilterAll" checked>
                        <label class="form-check-label" for="ageFilterAll">All</label>
                    </div>

                    <div class="form-check">
                        <input asp-for="GameListModel.SearchIsAdult" class="form-check-input" type="radio" value="false" id="ageFilterNo18">
                        <label class="form-check-label" for="ageFilterNo18">No 18+</label>
                    </div>

                    <div class="form-check">
                        <input asp-for="GameListModel.SearchIsAdult" class="form-check-input" type="radio" value="true" id="ageFilterOnly18">
                        <label class="form-check-label" for="ageFilterOnly18">Only 18+</label>
                    </div>
                </div>

                <!-- Number of players input fields -->
                <div class="mb-3">
                    <label class="form-label">Number of Players</label>
                    <div class="row">
                        <!-- Minimum Players input -->
                        <div class="col form-check">
                            <input asp-for="GameListModel.SearchMinPlayers" type="number" class="form-control" id="SearchMinPlayers" placeholder="Min Players" min="1">
                            <span asp-validation-for="GameListModel.SearchMinPlayers" class="text-danger"></span>
                        </div>

                        <!-- Maximum Players input -->
                        <div class="col form-check">
                            <input asp-for="GameListModel.SearchMaxPlayers" type="number" class="form-control" id="SearchMaxPlayers" placeholder="Max Players" min="1">
                            <span asp-validation-for="GameListModel.SearchMaxPlayers" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Example filter: Genres -->
                <div class="mb-3">
                    @await Component.InvokeAsync("GenreCheckboxFilter", Model.GameListModel)
                </div>


                <!-- Example filter: Categories -->
                <div class="mb-3">
                    @await Component.InvokeAsync("CategoryCheckboxFilter", Model.GameListModel)
                </div>
                <!-- Filter button -->
                <button type="submit" class="btn btn-primary w-100">Apply Filters</button>

            </form>
        </div>
    </div>

    <div class="col-12 col-md-9">
        <form method="post" asp-controller="GameNight" asp-action="AddGames">
            <button id="addGamesButton" type="submit" class="mb-3 w-100 btn btn-lg btn-primary">Next</button>
            <div class="row g-4">
                @{
                    var isUserAdult = Model.CurrentUser != null && Model.CurrentUser.IsAdult();

                    var gameIdList = new List<int>();
                    if(Model.GameNight.Games.Count() > 0)
                    {
                        foreach (var g in Model.GameNight.Games)
                        {
                            gameIdList.Add(g.Id);
                        }
                        Model.SelectedGameIds = gameIdList.ToArray();
                    }

                    foreach (var game in Model.GameListModel.DisplayGames)
                    {
                        var isSelected = Model.SelectedGameIds.Any(x => x == game.Id) ? "checked" : "";
                        var gameCardClass = game.IsAdult && !isUserAdult ? "bg-danger bg-opacity-50" : "bg-white";
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                            <div class="card h-100 @gameCardClass">
                                <img src="@game.ImgUrl" class="card-img-top img-fluid imageFixedList" alt="Photo of Boardgame">
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title fw-semibold">
                                        @game.Name
                                        @if (game.IsAdult)
                                        {
                                            <span class="badge bg-danger ms-auto small float-end">18+</span>
                                        }
                                    </h5>
                                    <p class="card-text">
                                        <!-- Checkbox for selection -->
                                        <input type="checkbox" name="SelectedGameIds" @isSelected value="@game.Id" id="@game.Id" />
                                        <label for="@game.Id">Add this game</label>
                                        <hr />
                                        @game.Description <br />
                                        Playable with: @game.MinPlayers/@game.MaxPlayers
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </form>
    </div>
</div>